{
  "compiler": {
    "version": "0.6.12+commit.27d51765"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "contract FiatTokenProxy",
            "name": "proxy",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "implementation",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "newProxyAdmin",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "previousOwner",
            "type": "address",
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "OwnershipTransferred",
        "anonymous": false
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "abortUpgrade"
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "helper",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "implementation",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "newProxyAdmin",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "proxy",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "transferOwnership"
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "withdrawFiatToken"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "constructor": {
          "params": {
            "implementation": "Address of the implementation contract",
            "newProxyAdmin": "Grantee of proxy admin role after upgrade",
            "proxy": "FiatTokenProxy contract"
          }
        },
        "helper()": {
          "returns": {
            "_0": "Contract address"
          }
        },
        "implementation()": {
          "returns": {
            "_0": "Contract address"
          }
        },
        "newProxyAdmin()": {
          "returns": {
            "_0": "Address"
          }
        },
        "owner()": {
          "details": "Tells the address of the owner",
          "returns": {
            "_0": "the address of the owner"
          }
        },
        "proxy()": {
          "returns": {
            "_0": "Contract address"
          }
        },
        "transferOwnership(address)": {
          "details": "Allows the current owner to transfer control of the contract to a newOwner.",
          "params": {
            "newOwner": "The address to transfer ownership to."
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "abortUpgrade()": {
          "notice": "Transfer proxy admin role to newProxyAdmin, and self-destruct"
        },
        "constructor": "Constructor",
        "helper()": {
          "notice": "The address of the V2UpgraderHelper contract"
        },
        "implementation()": {
          "notice": "The address of the FiatTokenV2 implementation contract"
        },
        "newProxyAdmin()": {
          "notice": "The address to which the proxy admin role will be transferred after the upgrade is completed"
        },
        "proxy()": {
          "notice": "The address of the FiatTokenProxy contract"
        },
        "withdrawFiatToken()": {
          "notice": "Withdraw any FiatToken in the contract"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@ensdomains/=node_modules/@ensdomains/",
      "@openzeppelin/=node_modules/@openzeppelin/",
      "@solidity-parser/=node_modules/prettier-plugin-solidity/node_modules/@solidity-parser/",
      "ds-test/=lib/forge-std/lib/ds-test/src/",
      "eth-gas-reporter/=node_modules/eth-gas-reporter/",
      "forge-std/=lib/forge-std/src/",
      "hardhat/=node_modules/hardhat/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 10000000
    },
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "compilationTarget": {
      "contracts/v2/upgrader/AbstractV2Upgrader.sol": "AbstractV2Upgrader"
    },
    "evmVersion": "istanbul",
    "libraries": {}
  },
  "sources": {
    "contracts/upgradeability/AdminUpgradeabilityProxy.sol": {
      "keccak256": "0x709d23a3d4b34a43861d099ec8c3f964c933f45bf30ee08c98a569433114c599",
      "urls": [
        "bzz-raw://97ec753a4c2cf21c11daccde7727b3343bedfe985b7299ddb86b91b641c6bb8e",
        "dweb:/ipfs/QmRerVbjv74Yx4Pa26am82cAMDyMXzka1oE9YnrQtGwkd7"
      ],
      "license": "Apache-2.0"
    },
    "contracts/upgradeability/Proxy.sol": {
      "keccak256": "0x27eb2c0719a143aafc9f7f1fa39ef225baa0ad667bcd5f90cd1e4abcc89f4c20",
      "urls": [
        "bzz-raw://90cc41dbda5503142c6742a0b88fac18b9738dab7fb47365f9dd004921c31357",
        "dweb:/ipfs/QmUfVsoFGj4nKvEy5fx7yszqNbC9VXWWkfWfMBHcwouLqr"
      ],
      "license": "Apache-2.0"
    },
    "contracts/upgradeability/UpgradeabilityProxy.sol": {
      "keccak256": "0xa7a9d804acfb476666548a05cd94ce8a5ffa6bd76b038cbc3f1683d6ac708c49",
      "urls": [
        "bzz-raw://805cbc090ff93c9d6eb6348683c6d2cf5da46c2bca254fda8d87516d395f9299",
        "dweb:/ipfs/Qmez8Q656MWiJwHw2t88X6bJwgbK2aUnnoqcj2FzyaWxdy"
      ],
      "license": "Apache-2.0"
    },
    "contracts/v1/FiatTokenProxy.sol": {
      "keccak256": "0x30fc5a64a101f783b2c745624d4c77b03a8f6373315857dc637581a189963f74",
      "urls": [
        "bzz-raw://f5de3f5569c8ac27ca793653613ca320c0ce77617510c31e7451d9b32f83ddb0",
        "dweb:/ipfs/QmYQq9xh4jNwCH9KUDbWqttj5MWMfY2iAZRzrQf4cHh2nA"
      ],
      "license": "Apache-2.0"
    },
    "contracts/v1/Ownable.sol": {
      "keccak256": "0xdd51a06c4d6c38ef806c50463ade63123980334bf173c3301794e242228fc9e5",
      "urls": [
        "bzz-raw://46632a7280a569d30da08ae6c0559295fa1dd6917ba458785ac1f50736474741",
        "dweb:/ipfs/QmYb5zXqzTHPaWegnn5NcmrbDHbVFYnpENXvtgjQxCrjMe"
      ],
      "license": "MIT"
    },
    "contracts/v2/upgrader/AbstractV2Upgrader.sol": {
      "keccak256": "0x21c320557817d8a5d802c351e39350a0ed638c5c4d0d22a76af6deafdb630988",
      "urls": [
        "bzz-raw://c90286e9908c5d025f021fcc09c234ee5797bbe5d051f5566225629d683f2ad3",
        "dweb:/ipfs/QmX6dKYi9xNtepSAZGNE16LMuJiPH2fDh7DebZUnPKUgGp"
      ],
      "license": "Apache-2.0"
    },
    "contracts/v2/upgrader/helpers/AbstractUpgraderHelper.sol": {
      "keccak256": "0x7bc786dd681b8d42a4599931e52df2a84e3cf9e9afa11fb483ad0135f582f769",
      "urls": [
        "bzz-raw://8ef7969da2c1880c6f507abba19ffdd161730c254c741a2cbedd620e623dae98",
        "dweb:/ipfs/QmP694Bb5LxqrwyRgmHcZuD9DCCQrtQ6Eu6TG1XvCZtG4z"
      ],
      "license": "Apache-2.0"
    },
    "node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
      "keccak256": "0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52",
      "urls": [
        "bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c",
        "dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
      "keccak256": "0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5",
      "urls": [
        "bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08",
        "dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "keccak256": "0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea",
      "urls": [
        "bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c",
        "dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}